<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leo.dao.BlogTypeDao"><!-- 当application加载dao层，会自动执行如下的命令 -->
	<resultMap type="BlogType" id="BlogTypeResult">
		<result property="id" column="id"/>
		<result property="typeName" column="typeName"/>
		<result property="orderNum" column="orderNum"/>
	</resultMap>
	<select id="countList" resultMap="BlogTypeResult">
		SELECT t2.id,t2.typeName,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogtype t2 ON t1.typeId=t2.id GROUP BY t2.typeName ORDER BY t2.orderNum;
	</select>
	
	<select id="findById" resultMap="BlogTypeResult">
		select * from t_blogtype where id=#{id};
	</select>
	
	
	<select id="list" parameterType="Map" resultMap="BlogTypeResult">
		select * from t_blogType
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
	
	<select id="getTotal" parameterType="Map" resultType="Long">
		select count(*) from t_blogType
	</select>
	
	<insert id="add" parameterType="BlogType">
		insert into t_blogType values(null,#{typeName},#{orderNum})
	</insert>
	
	<update id="update" parameterType="BlogType">
		update t_blogType
		<set>
		<if test="typeName!=null and typeName!=''">
			typeName= #{typeName},
		</if>
		
		<if test="orderNum!=null">
			orderNum= #{orderNum},
		</if>
		</set>
		where id=#{id}
	</update>
	
	<delete id="delete" parameterType="BlogType">
		delete from t_blogType where id=#{id}
	</delete>

</mapper> 